"use strict";(self.webpackChunkanyshake_org=self.webpackChunkanyshake_org||[]).push([[7245],{253:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/explorer-initial-prototype-007624e97c2d25c841d6dab492e377bd.webp"},4088:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/explorer-intermediate-prototype-58bcd087090943162892160bb258e68e.webp"},6657:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/explorer-improved-prototype-f521bcf88a3b3f6c94757a244d6f3ffa.webp"},7108:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"anyshake-explorer/product-overview","title":"Explorer Product Series Overview","description":"The Story","source":"@site/docs/anyshake-explorer/product-overview.md","sourceDirName":"anyshake-explorer","slug":"/anyshake-explorer/product-overview","permalink":"/docs/anyshake-explorer/product-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/anyshake/homepage/blob/master/docs/anyshake-explorer/product-overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Explorer Product Series Overview","slug":"product-overview"},"sidebar":"tutorialSidebar","previous":{"title":"Checkout Our Live Demo","permalink":"/docs/live-demo"},"next":{"title":"Hardware Interface","permalink":"/docs/anyshake-explorer/E-C111G/hardware-interface"}}');var s=t(4848),o=t(8453);const i={sidebar_position:1,title:"Explorer Product Series Overview",slug:"product-overview"},a=void 0,l={},d=[{value:"The Story",id:"the-story",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Product Models",id:"product-models",level:2},{value:"Resourses",id:"resourses",level:2}];function c(e){const r={a:"a",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"the-story",children:"The Story"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.strong,{children:"AnyShake Explorer"})," was first conceived in 2023, when a undergraduate student, unable to afford the expensive RS3D, decided to build a solution from scratch. The original prototype was a modest, amateur effort based on the ADS1256."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Initial Prototype",src:t(253).A+"",width:"1051",height:"698"})}),"\n",(0,s.jsx)(r.p,{children:"Later, the ADS1256 was upgraded to an ADS1262, which was then integrated with an MCU onto a PCB board."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Intermediate Prototype",src:t(4088).A+"",width:"1280",height:"960"})}),"\n",(0,s.jsxs)(r.p,{children:["After several iterations, the design evolved from a basic ADC-only version to one that integrated a 3-axis accelerometer and a front-end amplifier. It drew inspiration from the amplifier design of ",(0,s.jsx)(r.a,{href:"https://github.com/olewolf/geophone/blob/master/Amplifier%20Schematic.pdf",children:"olewolf/geophone"}),", but due to the simplicity of that approach, the system still suffered from excessive noise."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Improved Prototype",src:t(6657).A+"",width:"1280",height:"831"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Through extensive research of academic papers, countless experiments, and persistent debugging, the final version of the product emerged \u2014 now known as the AnyShake Explorer."})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Final Prototype",src:t(7949).A+"",width:"1280",height:"720"})}),"\n",(0,s.jsxs)(r.p,{children:["At the beginning, the AnyShake Project encouraged users to DIY hardware, but as the project grew, the project maintainer received numerous requests from users hoping to directly purchase a finished product. In response, the original developer established ",(0,s.jsx)(r.strong,{children:"SensePlex Limited"})," at the end of 2024, aiming to commercialize the AnyShake product while preserving its open-source nature and achieving sustainable development."]}),"\n",(0,s.jsx)(r.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"AnyShake Explorer"})," is designed using ",(0,s.jsx)(r.strong,{children:"KiCAD"}),", with an ",(0,s.jsx)(r.strong,{children:"STM32"})," microcontroller at its core. Development tools include ",(0,s.jsx)(r.strong,{children:"STM32CubeMX"})," and ",(0,s.jsx)(r.strong,{children:"PlatformIO"}),", and the system runs ",(0,s.jsx)(r.strong,{children:"FreeRTOS"}),". The device features a 32-bit ADC, a built-in low-noise 3-axis accelerometer (16-bit), and supports connecting up to ",(0,s.jsx)(r.strong,{children:"three 4.5 Hz geophones"})," (for a total of six axes) to monitor seismic activity simultaneously. It also includes onboard ",(0,s.jsx)(r.strong,{children:"temperature sensor"}),", allowing users to monitor ambient conditions alongside seismic data. To match the performance of proprietary competitors, a pole-zero compensation circuit was implemented for geophone signal conditioning, effectively extending the instrument period to ",(0,s.jsx)(r.strong,{children:"2 seconds (0.5 Hz)"})," and enabling improved detection of distant seismic events."]}),"\n",(0,s.jsxs)(r.p,{children:["Unlike some solutions, ",(0,s.jsx)(r.strong,{children:"AnyShake Explorer does not include an integrated single-board computer (SBC)"}),". This design choice results in ",(0,s.jsx)(r.strong,{children:"ultra-low power consumption"})," and ",(0,s.jsx)(r.strong,{children:"avoids electromagnetic interference"})," commonly introduced by onboard components like Wi-Fi\u2014a frequent complaint among Raspberry Shake users. Instead, data is transmitted via ",(0,s.jsx)(r.strong,{children:"RS-232"})," or ",(0,s.jsx)(r.strong,{children:"RS-485"})," to an external computer, such as a laptop, x86_64 server, NUC, or Raspberry Pi. AnyShake Explorer is fully compatible with ",(0,s.jsx)(r.strong,{children:"Windows"}),", ",(0,s.jsx)(r.strong,{children:"Linux"}),", and ",(0,s.jsx)(r.strong,{children:"macOS"})," systems."]}),"\n",(0,s.jsx)(r.h2,{id:"product-models",children:"Product Models"}),"\n",(0,s.jsx)(r.p,{children:"Currently, the AnyShake Explorer comes in three models:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"E-C111G"}),"\n",(0,s.jsx)(r.li,{children:"E-C121G"}),"\n",(0,s.jsx)(r.li,{children:"E-D001"}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"E-C111G is the officially released version"}),". E-C121G was used during the closed testing phase and remains compatible with the E-C111G. The main difference lies in the accelerometer model: the E-C111G uses the ",(0,s.jsx)(r.strong,{children:"LSM6DS3"}),", while the E-C121G uses the ",(0,s.jsx)(r.strong,{children:"ICM-42688-P"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"E-D001"})," is the early version of the AnyShake Explorer hardware, found on the ",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.a,{href:"https://github.com/anyshake/explorer/tree/v1",children:"v1 branch"})}),". It is based on the ",(0,s.jsx)(r.strong,{children:"ESP8266"})," platform, some early adopters of the AnyShake Project built their own units and continue to use them."]}),"\n",(0,s.jsx)(r.h2,{id:"resourses",children:"Resourses"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://github.com/anyshake/explorer/tree/master",children:"E-C111G/E-C121G Branch"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://github.com/anyshake/explorer/tree/v1",children:"E-D001 Branch"})}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},7949:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/explorer-final-prototype-4789a4216ce1b6366d33f81bbe90d87a.webp"},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>a});var n=t(6540);const s={},o=n.createContext(s);function i(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);