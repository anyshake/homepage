"use strict";(self.webpackChunkanyshake=self.webpackChunkanyshake||[]).push([[23],{5754:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var i=r(5893),s=r(1151);const t={sidebar_position:3},l="Explorer Settings",o={id:"AnyShake Observer/Configuration/explorer",title:"Explorer Settings",description:"- Key: explorer_settings",source:"@site/docs/AnyShake Observer/Configuration/explorer.md",sourceDirName:"AnyShake Observer/Configuration",slug:"/AnyShake Observer/Configuration/explorer",permalink:"/docs/AnyShake Observer/Configuration/explorer",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Location Settings",permalink:"/docs/AnyShake Observer/Configuration/location"},next:{title:"Sensor Settings",permalink:"/docs/AnyShake Observer/Configuration/sensor"}},a={},c=[{value:"Fields",id:"fields",level:2},{value:"dsn",id:"dsn",level:3},{value:"engine",id:"engine",level:3},{value:"legacy",id:"legacy",level:3},{value:"Example",id:"example",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"explorer-settings",children:"Explorer Settings"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Key: ",(0,i.jsx)(n.code,{children:"explorer_settings"})]}),"\n",(0,i.jsx)(n.li,{children:"Description: Define AnyShake Explorer settings, including the serial port name, baud rate, etc."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This area configures the method for AnyShake Observer to establish a connection with AnyShake Explorer (such as serial port, TCP), and the modes AnyShake Explorer operates in."}),"\n",(0,i.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,i.jsx)(n.h3,{id:"dsn",children:"dsn"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsxs)(n.li,{children:["Description: Data source name, including the serial port name, baud rate.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Example for Windows: ",(0,i.jsx)(n.code,{children:"transport://COM1?baudrate=115200"})]}),"\n",(0,i.jsxs)(n.li,{children:["Example for *nix: ",(0,i.jsx)(n.code,{children:"transport:///dev/ttyUSB0?baudrate=115200"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"engine",children:"engine"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsxs)(n.li,{children:["Description: Data source engine, available options are:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"serial"}),": Via serial port"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tcp"}),": Via TCP connection"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"legacy",children:"legacy"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Type: ",(0,i.jsx)(n.code,{children:"bool"})]}),"\n",(0,i.jsxs)(n.li,{children:["Description: When using ESP8266-based AnyShake Explorer, set this option to ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "explorer_settings": {\n        "dsn": "transport:///dev/ttyUSB0?baudrate=115200",\n        "engine": "serial",\n        "legacy": false\n    }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>l});var i=r(7294);const s={},t=i.createContext(s);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);