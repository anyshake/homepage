"use strict";(self.webpackChunkanyshake=self.webpackChunkanyshake||[]).push([[655],{3733:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=n(5893),s=n(1151);const r={sidebar_position:1},l="Overview",o={id:"AnyShake Observer/Configuration/overview",title:"Overview",description:"AnyShake Observer relies on the JSON format configuration file, here we introduce the JSON-based configuration.",source:"@site/docs/AnyShake Observer/Configuration/overview.md",sourceDirName:"AnyShake Observer/Configuration",slug:"/AnyShake Observer/Configuration/overview",permalink:"/docs/AnyShake Observer/Configuration/overview",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Versioning",permalink:"/docs/AnyShake Observer/versioning"},next:{title:"Station Settings",permalink:"/docs/AnyShake Observer/Configuration/station"}},d={},c=[{value:"About JSON Format",id:"about-json-format",level:2},{value:"JSON Data Types",id:"json-data-types",level:2},{value:"Configuration Fields",id:"configuration-fields",level:2}];function a(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(t.p,{children:"AnyShake Observer relies on the JSON format configuration file, here we introduce the JSON-based configuration."}),"\n",(0,i.jsx)(t.h2,{id:"about-json-format",children:"About JSON Format"}),"\n",(0,i.jsxs)(t.p,{children:["JSON, or ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/JSON",children:"JavaScript Object Notation"}),", in short is objects in Javascript. One JSON file contains one and only one JSON object, beginning with ",(0,i.jsx)(t.code,{children:"{"})," and ending with ",(0,i.jsx)(t.code,{children:"}"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"json-data-types",children:"JSON Data Types"}),"\n",(0,i.jsx)(t.p,{children:"Here is a brief introduction of JSON data types. They will be referenced in the rest of docs."}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["boolean: ",(0,i.jsx)(t.code,{children:"true"})," | ",(0,i.jsx)(t.code,{children:"false"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Boolean value, has to be either true or false, without quotation mark."}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"number"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Usually non-negative integers, without quotation mark."}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"string"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Sequence of characters, surrounded by quotation mark."}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["array: ",(0,i.jsx)(t.code,{children:"[]"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Array of elements. The type of its elements is usually the same, e.g., [string] is an array of strings."}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["object: ",(0,i.jsx)(t.code,{children:"{}"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Object. It comes with a list of key value pairs."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsxs)(t.em,{children:["A key value pair usually ends with a comma ",(0,i.jsx)(t.code,{children:","}),", but must not ends with a comma if it is the last element of the object."]})}),"\n",(0,i.jsx)(t.h2,{id:"configuration-fields",children:"Configuration Fields"}),"\n",(0,i.jsx)(t.p,{children:"Here is a list of configuration fields, with their types and descriptions."}),"\n",(0,i.jsxs)(t.p,{children:["The configuration fields are taken from ",(0,i.jsx)(t.a,{href:"https://github.com/anyshake/observer/releases/tag/v2.4.0",children:"v2.4.0"}),"."]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Field"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"station_settings"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"object"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Define basic information of the station"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"geophone_settings"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"object"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Define geophone characteristics (EHZ, EHE, EHN)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"adc_settings"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"object"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Define the ADC characteristics of AnyShake Explorer"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"serial_settings"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"object"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Set serial port name, baud rate, channel packet length"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"ntpclient_settings"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"object"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Define a available NTP server, required for time syncing"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"archiver_settings"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"object"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Set up database archiving feature"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"server_settings"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"object"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Define the embed server listening address and port"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"miniseed_settings"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"object"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Set up MiniSEED data archiving feature"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"seedlink_settings"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"object"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Not implemented yet, ignore this field"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>l});var i=n(7294);const s={},r=i.createContext(s);function l(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);