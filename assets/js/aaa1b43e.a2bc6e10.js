"use strict";(self.webpackChunkanyshake=self.webpackChunkanyshake||[]).push([[957],{5392:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var s=r(5893),t=r(1151);const i={sidebar_position:2},o="Quick Start",a={id:"AnyShake Observer/quick-start",title:"Quick Start",description:"The AnyShake Observer needs to be used with AnyShake Explorer, and you need to configure AnyShake Observer after installing it.",source:"@site/docs/AnyShake Observer/quick-start.md",sourceDirName:"AnyShake Observer",slug:"/AnyShake Observer/quick-start",permalink:"/docs/AnyShake Observer/quick-start",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/AnyShake Observer/installation"},next:{title:"CLI Interface",permalink:"/docs/AnyShake Observer/cli-interface"}},l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quick Configuration",id:"quick-configuration",level:2},{value:"Run AnyShake Observer",id:"run-anyshake-observer",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsx)(n.p,{children:"The AnyShake Observer needs to be used with AnyShake Explorer, and you need to configure AnyShake Observer after installing it."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"Before you start, make sure you have the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["AnyShake Observer is installed on your computer, version is ",(0,s.jsx)(n.code,{children:"v3.0.0"})," or later."]}),"\n",(0,s.jsxs)(n.li,{children:["You have installed any of the following databases: PostgreSQL, MySQL, or SQL Server, assuming the database engine is PostgreSQL, database name is ",(0,s.jsx)(n.code,{children:"observer"}),", username is ",(0,s.jsx)(n.code,{children:"postgres"}),", and password is ",(0,s.jsx)(n.code,{children:"passw0rd"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["AnyShake Explorer is running in 24 bit mode, and hardware is connected to your PC, assuming the corresponding serial port is ",(0,s.jsx)(n.code,{children:"/dev/ttyUSB0"})," (if you are using Windows, the serial port is something like ",(0,s.jsx)(n.code,{children:"COM1"}),"), baud rate is ",(0,s.jsx)(n.code,{children:"115200"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"quick-configuration",children:"Quick Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Note that AnyShake has two hardware implementations, based on ESP8266 and STM32F103. When using ESP8266 with AnyShake Observer, the ",(0,s.jsx)(n.code,{children:"explorer_settings.legacy"})," configuration field should be ",(0,s.jsx)(n.code,{children:"true"}),". In this example, assuming the hardware is ESP8266 based AnyShake Explorer."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "station_settings": {\n        "name": "AnyShake Station",\n        "owner": "Lee",\n        "region": "Asia",\n        "country": "China",\n        "city": "Beijing"\n    },\n    "location_settings": {\n        "latitude": 39.9,\n        "longitude": 116.4,\n        "elevation": 50.0\n    },\n    "explorer_settings": {\n        "dsn": "transport:///dev/ttyUSB0?baudrate=115200",\n        "engine": "serial",\n        "legacy": false\n    },\n    "sensor_settings": {\n        "frequency": 4.5,\n        "sensitivity": 28.8,\n        "velocity": true,\n        "vref": 5.0,\n        "fullscale": 10.0,\n        "resolution": 24\n    },\n    "stream_settings": {\n        "network": "AS",\n        "station": "SHAKE",\n        "location": "00",\n        "channel": "EH"\n    },\n    "ntpclient_settings": {\n        "host": "pool.ntp.org",\n        "port": 123\n    },\n    "database_settings": {\n        "engine": "postgresql",\n        "host": "127.0.0.1",\n        "port": 5432,\n        "username": "postgres",\n        "password": "passw0rd",\n        "database": "observer"\n    },\n    "server_settings": {\n        "host": "0.0.0.0",\n        "port": 8073,\n        "cors": true,\n        "debug": true,\n        "rate": 30\n    },\n    "logger_settings": {\n        "level": "info",\n        "rotation": 7,\n        "lifecycle": 3,\n        "size": 5,\n        "dump": "/home/yuki/observer.log"\n    },\n    "services_settings": {\n        "miniseed": {\n            "enable": true,\n            "lifecycle": 10,\n            "path": "/home/yuki/miniseed"\n        },\n        "archiver": {\n            "enable": true,\n            "lifecycle": 10\n        },\n        "forwarder": {\n            "enable": true,\n            "host": "0.0.0.0",\n            "port": 30000\n        },\n        "seedlink": {\n            "enable": true,\n            "host": "0.0.0.0",\n            "port": 18000\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"run-anyshake-observer",children:"Run AnyShake Observer"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["On Windows, configuration file is located in the same directory as AnyShake Observer binary. You may run ",(0,s.jsx)(n.code,{children:"observer.exe"})," without additional parameters."]}),"\n",(0,s.jsxs)(n.li,{children:["On Linux, configuration file is usually located at ",(0,s.jsx)(n.code,{children:"/usr/local/etc/observer/config.json"}),". Run ",(0,s.jsx)(n.code,{children:"observer --config=/usr/local/etc/observer/config.json"})," in foreground or use other tools such as systemd to run AnyShake Observer as background process."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>o});var s=r(7294);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);