"use strict";(self.webpackChunkanyshake=self.webpackChunkanyshake||[]).push([[909],{1193:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var r=i(5893),n=i(1151);const t={sidebar_position:5},o="Related Libraries",a={id:"AnyShake Observer/Development/related-lib",title:"Related Libraries",description:"During the development process of AnyShake Observer, some seismological data processing libraries are developed, which are used by AnyShake Observer to read and write seismological data.",source:"@site/docs/AnyShake Observer/Development/related-lib.md",sourceDirName:"AnyShake Observer/Development",slug:"/AnyShake Observer/Development/related-lib",permalink:"/docs/AnyShake Observer/Development/related-lib",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Headless Architecture",permalink:"/docs/AnyShake Observer/Development/headless"},next:{title:"Software Versioning",permalink:"/docs/AnyShake Observer/Development/versioning"}},l={},c=[{value:"mseedio",id:"mseedio",level:2},{value:"sacio",id:"sacio",level:2},{value:"slgo",id:"slgo",level:2}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"related-libraries",children:"Related Libraries"}),"\n",(0,r.jsx)(s.p,{children:"During the development process of AnyShake Observer, some seismological data processing libraries are developed, which are used by AnyShake Observer to read and write seismological data."}),"\n",(0,r.jsx)(s.h2,{id:"mseedio",children:"mseedio"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://github.com/bclswl0827/mseedio",children:"github.com/bclswl0827/mseedio"})}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"mseedio"})," is a Go library for reading and writing MiniSEED data. It is used by AnyShake Observer to read and write MiniSEED data, this library is maintained by ",(0,r.jsx)(s.a,{href:"https://github.com/bclswl0827",children:"@bclswl0827"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["For documentation, please visit ",(0,r.jsx)(s.a,{href:"https://pkg.go.dev/github.com/bclswl0827/mseedio",children:"pkg.go.dev/github.com/bclswl0827/mseedio"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"sacio",children:"sacio"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://github.com/bclswl0827/sacio",children:"github.com/bclswl0827/sacio"})}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"sacio"})," is a Go library for reading and writing SAC data. It is used by AnyShake Observer to read and write SAC data, this library is maintained by ",(0,r.jsx)(s.a,{href:"https://github.com/bclswl0827",children:"@bclswl0827"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["For documentation, please visit ",(0,r.jsx)(s.a,{href:"https://pkg.go.dev/github.com/bclswl0827/sacio",children:"pkg.go.dev/github.com/bclswl0827/sacio"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"slgo",children:"slgo"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"htts://github.com/bclswl0827/slgo",children:"github.com/bclswl0827/slgo"})}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"slgo"})," is a Go library for SEEDLink server. It's used by AnyShake Observer to run a SEEDLink server, this library is maintained by ",(0,r.jsx)(s.a,{href:"https://github.com/bclswl0827",children:"@bclswl0827"}),", but it's not finished yet."]})]})}function h(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,s,i)=>{i.d(s,{Z:()=>a,a:()=>o});var r=i(7294);const n={},t=r.createContext(n);function o(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);